{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "dnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "The DNS prefix for the public IP address used by the Load Balancer"
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD Domain created "
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The location of resources, such as templates and DSC modules, that the template depends on"
      },
      "defaultValue": "https://github.com/Azure/azure-quickstart-templates/tree/master/active-directory-new-domain-ha-2-dc"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      },
      "defaultValue": ""
    },
    "pdcRDPPort": {
      "type": "int",
      "metadata": {
        "description": "The public RDP port for the PDC VM"
      },
      "defaultValue": 3389
    },
    "bdcRDPPort": {
      "type": "int",
      "metadata": {
        "description": "The public RDP port for the BDC VM"
      },
      "defaultValue": 13389
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username for VM"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for VMs"
      }
    },
    "numberOfInstances": {
      "type": "int",
      "defaultValue": 3,
      "minValue": 3,
      "maxValue": 10,
      "metadata": {
        "description": "Number of VMs to deploy, limit 5 since this sample is using a single storage account"
      }
    },
    "noOfDataDisk": {
      "type": "int",
      "defaultValue": 2,
      "maxValue": 4,
      "metadata": {
        "description": "number of managed data disk to be attach with all VM's"
      }
    },
    "dataDiskSize": {
      "type": "int",
      "defaultValue": 128
    },
    "dataDiskType": {
      "type": "string",
      "defaultValue": "StandardLRS"
    },
    "diag_storageAccount_name": {
      "type": "string"
    },
    "prefix": {
      "type": "string",
      "defaultValue": "fwd_",
      "metadata": {
        "description": "Prefix information coming from Ingest template"
      }
    },
    "addressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "addressPrefix information coming from Ingest template"
      }
    },
    "subnet1Prefixvalue": {
      "type": "string",
      "defaultValue": "10.0.10.0/24",
      "metadata": {
        "description": "subnet1Prefixvalue information coming from Ingest template"
      }
    },
    "businessUnit": {
      "type": "string",
      "metadata": {
        "description": "Tag for resource"
      }
    },
    "owner": {
      "type": "string",
      "metadata": {
        "description": "Tag for resource"
      }
    },
    "costCenter": {
      "type": "string",
      "metadata": {
        "description": "Tag for resource"
      }
    },
    "lockedResource": {
      "type": "string",
      "metadata": {
        "description": "resource lock for storage acocunt"
      }
    },
    "subnet2Prefixvalue": {
      "type": "string",
      "defaultValue": "10.0.20.0/24",
      "metadata": {
        "description": "subnet2Prefixvalue information coming from Ingest template"
      }
    },
    "subnet3Prefixvalue": {
      "type": "string",
      "defaultValue": "10.0.30.0/24",
      "metadata": {
        "description": "subnet3Prefixvalue information coming from Ingest template"
      }
    },
    "gatewaySubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.40.0/24",
      "metadata": {
        "description": "subnet4Prefixvalue information coming from Ingest template"
      }
    },
    "numberOfDisks": {
      "type": "int",
      "defaultValue": 2,
      "allowedValues": [ 2, 4, 6, 8 ]
    },
    "publicIPAddressName": {
      "type": "string",
      "defaultValue": "hcf-public-ip",
      "metadata": {
        "description": "Public IP Address Name"
      }
    },
    "dnsNameforLBIP": {
      "type": "string",
      "defaultValue": "uniqueDnsNameforLBIP",
      "metadata": {
        "description": "Unique DNS name"
      }
    },
    "lbName": {
      "type": "string",
      "defaultValue": "hcf-lb-external"
    },
    "localGatewayName": {
      "type": "string"
    },
    "localGatewayIpAddress": {
      "type": "string"
    },
    "localAddressPrefix": {
      "type": "string"
    },
    "OS": {
      "type": "string",
      "defaultValue": "Windows",
      "allowedValues": [
        "Ubuntu",
        "Windows"
      ],
      "metadata": {
        "description": "OS Platform for the VM"
      }
    }
  },
  "variables": {
    "publicIPAddressName": "ad-lb-pip",
    "adAvailabilitySetName": "adAvailabiltySet",
    "diag_storageAccount_name": "[concat(parameters('diag_storageAccount_name'),uniquestring(resourceGroup().id))]",
    "adPDCVMName": "[concat(parameters('prefix'),'-adPdc-01')]",
    "adBDCVMName": "[concat(parameters('prefix'),'-adBdc-01')]",
    "adVMSize": "Standard_DS2_v2",

    "adLBName": "adLoadBalancer",
    "adLBFE": "LBFE",
    "adLBBE": "LBBE",
    "adPDCRDPNAT": "adPDCRDP",
    "adBDCRDPNAT": "adBDCRDP",
    "adlbID": "[resourceId('Microsoft.Network/loadBalancers',variables('adLBName'))]",
    "adlbFEConfigID": "[concat(variables('adlbID'),'/frontendIPConfigurations/',variables('adLBFE'))]",
    "adPDCRDPNATRuleID": "[concat(variables('adlbID'),'/inboundNatRules/',variables('adPDCRDPNAT'))]",
    "adBDCRDPNATRuleID": "[concat(variables('adlbID'),'/inboundNatRules/',variables('adBDCRDPNAT'))]",
    "adBEAddressPoolID": "[concat(variables('adlbID'),'/backendAddressPools/',variables('adLBBE'))]",

    "virtualNetworkName": "[concat(parameters('prefix'),'-vnet')]",
    "Vmname": "[concat(parameters('prefix'),'-vm-')]",
    "addressPrefix": "[parameters('addressPrefix')]",
    "subnet1Name": "[concat(parameters('prefix'), '-subnet-dmz')]",
    "subnet2Name": "[concat(parameters('prefix'), '-subnet-app')]",
    "subnet3Name": "[concat(parameters('prefix'), '-subnet-be')]",
    "subnet4Name": "GatewaySubnet",
    "subnet1Prefix": "[parameters('subnet1Prefixvalue')]",
    "subnet2Prefix": "[parameters('subnet2Prefixvalue')]",
    "subnet3Prefix": "[parameters('subnet3Prefixvalue')]",
    "subnet4Prefix": "[parameters('gatewaySubnetPrefix')]",
    "subnet1Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('virtualNetworkName'),variables('subnet1Name'))]",
    "subnet2Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('virtualNetworkName'),variables('subnet2Name'))]",
    "subnet3Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('virtualNetworkName'),variables('subnet3Name'))]",

    "adPDCNicName": "adPDCNic",
    "adPDCNicIPAddress": "10.0.30.4",
    "adBDCNicName": "adBDCNic",
    "adBDCNicIPAddress": "10.0.30.5",
    "adSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet4Name'))]",
    "adPDCDataDisk": "ADPDCDataDisk",
    "adBDCDataDisk": "ADBDCDataDisk",
    "adDataDiskSize": 1000,

    "adPDCModulesURL": "[concat(parameters('_artifactsLocation'),'/DSC/CreateADPDC.zip')]",
    "adPDCConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",

    "availabilitySetName": "[concat(parameters('prefix'), 'avset')]",
    "configuredatadiskuri": "https://raw.githubusercontent.com/AshishSharma303/PersonalRepository/master/configuredatadisk.json",
    "resourceId": "[resourceGroup().id]",
    "accountid": "[concat(variables('resourceId'),'/providers/Microsoft.Storage/storageAccounts/', variables('diag_storageAccount_name'))]",
    "metricsresourceid": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name ,'/providers/','Microsoft.Compute/virtualMachines/')]",
    "wadlogs": "<WadCfg> <DiagnosticMonitorConfiguration overallQuotaInMB=\"4096\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2010/10/DiagnosticsConfiguration\"> <DiagnosticInfrastructureLogs scheduledTransferLogLevelFilter=\"Error\"/> <WindowsEventLog scheduledTransferPeriod=\"PT1M\" > <DataSource name=\"Application!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"Security!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"System!*[System[(Level = 1 or Level = 2)]]\" /></WindowsEventLog>",
    "wadperfcounters": "<PerformanceCounters scheduledTransferPeriod=\"PT1M\"><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Processor Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU utilization\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Privileged Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU privileged time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% User Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU user time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor Information(_Total)\\Processor Frequency\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"CPU frequency\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\System\\Processes\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Processes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Thread Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Threads\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Handle Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Handles\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\% Committed Bytes In Use\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Memory usage\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Available Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Committed Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory committed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Commit Limit\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory commit limit\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active time\" locale=\"en-us\"/></PerformanceCounterConfiguration>",
    "wadperfcounters2": "<PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Read Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active read time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Write Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active write time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Transfers/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Reads/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk read operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Writes/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk write operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Read Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk read speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Write Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk write speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\LogicalDisk(_Total)\\% Free Space\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk free space (percentage)\" locale=\"en-us\"/></PerformanceCounterConfiguration></PerformanceCounters>",
    "wadmetrics": "[concat('<Metrics resourceId=\"',variables('metricsresourceid'),'\"><MetricAggregation scheduledTransferPeriod=\"PT1H\"/><MetricAggregation scheduledTransferPeriod=\"PT1M\"/></Metrics></DiagnosticMonitorConfiguration></WadCfg>')]",
    "wadcfgx": "[concat(variables('wadlogs'),variables('wadperfcounters'),variables('wadperfcounters2'),variables('wadmetrics'))]",

    "Ubuntu": {
      "publisher": "Canonical",
      "offer": "UbuntuServer",
      "sku": "16.04.0-LTS",
      "version": "latest"
    },
    "Windows": {
      "publisher": "MicrosoftWindowsServer",
      "offer": "WindowsServer",
      "sku": "2016-Datacenter",
      "version": "latest"
    },
    "imageReference": "[variables(parameters('OS'))]",
    "publicIPAddressType": "Dynamic",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',parameters('lbName'))]",
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontend')]"
  },
  "resources": [
    {
      "name": "[variables('publicIPAddressName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2016-10-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsPrefix')]"
        }
      }
    },
    {
      "name": "[variables('adAvailabilitySetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]"
    },
    {
      "name": "[variables('adLBName')]",
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2016-10-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('adLBFE')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('adLBBE')]"
          }
        ],
        "inboundNatRules": [
          {
            "name": "[variables('adPDCRDPNAT')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('adlbFEConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": "[parameters('pdcRDPPort')]",
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[variables('adBDCRDPNAT')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('adlbFEConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": "[parameters('bdcRDPPort')]",
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          }
        ]
      }
    },
    {
      "name": "[variables('adPDCNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2016-10-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "Microsoft.Resources/deployments/VNet",
        "[variables('adLBName')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('adPDCNicIPAddress')]",
              "subnet": {
                "id": "[variables('adSubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('adBEAddressPoolID')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[variables('adPDCRDPNATRuleID')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "[variables('adBDCNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2016-10-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "Microsoft.Resources/deployments/VNet",
        "[concat('Microsoft.Network/loadBalancers/',variables('adLBName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('adBDCNicIPAddress')]",
              "subnet": {
                "id": "[variables('adSubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('adBEAddressPoolID')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[variables('adBDCRDPNATRuleID')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "[variables('adPDCVMName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts',variables('diag_storageAccount_name'))]",
        "[resourceId('Microsoft.Network/networkInterfaces',variables('adPDCNicName'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetName'))]",
        "[resourceId('Microsoft.Network/loadBalancers',variables('adLBName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('adVMSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetName'))]"
        },
        "osProfile": {
          "computerName": "[variables('adPDCVMName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')]",
          "osDisk": {
            "name": "[ concat(parameters('prefix'),'-pdc-osdisk-', '0') ]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            },
            "diskSizeGB": 128
          }

        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('adPDCNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "CreateADForest",
          "type": "extensions",
          "apiVersion": "2016-03-30",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('adPDCVMName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.19",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "ModulesUrl": "[variables('adPDCModulesURL')]",
              "ConfigurationFunction": "[variables('adPDCConfigurationFunction')]",
              "Properties": {
                "DomainName": "[parameters('domainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('adminUserName')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                }
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('adminPassword')]"
              }
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "Storage",
      "name": "[variables('diag_storageAccount_name')]",
      "apiVersion": "2016-01-01",
      "location": "[resourcegroup().location]",
      "tags": {
        "businessUnit": "[parameters('businessUnit')]",
        "owner": "[parameters('owner')]",
        "costCenter": "[parameters('costCenter')]"
      },
      "scale": null,
      "properties": { },
      "dependsOn": [ ]
    },
    {
      "name": "[concat(variables('diag_storageAccount_name'),'/Microsoft.Authorization/StorageLock')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('diag_storageAccount_name'))]"
      ],
      "type": "Microsoft.Storage/storageAccounts/providers/locks",
      "apiVersion": "2016-09-01",
      "properties": {
        "level": "CanNotDelete",
        "notes": "can not delete the storage account, there is a lock on top of it"
      }
    },

    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "businessUnit": "[parameters('businessUnit')]",
        "owner": "[parameters('owner')]",
        "costCenter": "[parameters('costCenter')]"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameforLBIP')]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetName')]",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": "2",
        "platformUpdateDomainCount": "2",
        "managed": "true"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "tags": {
        "businessUnit": "[parameters('businessUnit')]",
        "owner": "[parameters('owner')]",
        "costCenter": "[parameters('costCenter')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]"
            }
          },
          {
            "name": "[variables('subnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet2Prefix')]"
            }
          },
          {
            "name": "[variables('subnet3Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet3Prefix')]"
            }
          },
          {
            "name": "[variables('subnet4Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet4Prefix')]"
            }
          }

        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('prefix'),'-nic-', copyindex(1))]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "tags": {
        "businessUnit": "[parameters('businessUnit')]",
        "owner": "[parameters('owner')]",
        "costCenter": "[parameters('costCenter')]"
      },
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[variables('virtualNetworkName')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet2Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('prefix'), '-vm-', copyIndex(1))]",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "tags": {
        "businessUnit": "[parameters('businessUnit')]",
        "owner": "[parameters('owner')]",
        "costCenter": "[parameters('costCenter')]"
      },
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "nicLoop",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('diag_storageAccount_name'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "Standard_DS1_v2"
        },
        "osProfile": {
          "computerName": "[concat(parameters('prefix'),'-vm-', copyIndex(1))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')]",
          "osDisk": {
            "name": "[ concat(parameters('prefix'),'-osdisk-', copyIndex(1)) ]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            },
            "diskSizeGB": 128
          }

        },

        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('prefix'),'-nic-', copyindex(1)))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('https', '://', variables('diag_storageAccount_name'), '.blob.core.windows.net', '/')]"
          }
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "Microsoft.Insights.VMDiagnosticsSettings",
          "apiVersion": "2015-05-01-preview",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat( 'Microsoft.Compute/virtualMachines/', parameters('prefix'), '-vm-', copyIndex(1))]"
          ],
          "properties": {
            "publisher": "Microsoft.Azure.Diagnostics",
            "type": "IaaSDiagnostics",
            "typeHandlerVersion": "1.5",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "xmlCfg": "[base64(variables('wadcfgx'))]",
              "StorageAccount": "[variables('diag_storageAccount_name')]"
            },
            "protectedSettings": {
              "storageAccountName": "[variables('diag_storageAccount_name')]",
              "storageAccountKey": "[listKeys(variables('accountid'),'2015-05-01-preview').key1]",
              "storageAccountEndPoint": "https://core.windows.net/"
            }
          }
        }

      ]


    },

    {
      "apiVersion": "2015-06-15",
      "name": "[parameters('lbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "tags": {
        "businessUnit": "[parameters('businessUnit')]",
        "owner": "[parameters('owner')]",
        "costCenter": "[parameters('costCenter')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontend",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPAddressID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "LoadBalancerBackend"
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers/inboundNatRules",
      "name": "[concat(parameters('lbName'), '/', 'RDP-VM', copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "lbNatLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', parameters('lbName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfiguration": {
          "id": "[variables('frontEndIPConfigID')]"
        },
        "protocol": "tcp",
        "frontendPort": "[copyIndex(5000)]",
        "backendPort": 3389,
        "enableFloatingIP": false
      }
    }




  ],
  "outputs": {

    "ServerName1": {
      "type": "object",
      "value": "[reference(concat(parameters('prefix'), '-vm-', '1' ))]"
    }

  }

    }